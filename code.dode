fn main() {

    print_int(1 + 2 * 2 + 1);
    {
        let a = 1;
        let b = 2 + a + 3*4+2>5*1-3<2*3 + 4;
        let c = 3 + b - b * a * 2;
        print_int(a + b + c);
    }

    if 0 {
        print_int(69);
    }
    fibb(1000000, 0, 1);
    print_zeroes(5);
    #let x = 1 + (x = 3);

    let b = 1;
    while b < 10 {
        print_int(factorial(b));
        b += 1;
    }
    print_zeroes(3);

    return 0;
}

fn non_returning() {
    return 45;
    let a = 34;
    if 1 {
        return 3;
    }
    while 1 {
        return 4;
    }
}

fn print_zeroes(n) {
    let b = 0;
    while b < n {
        b += 1;
        print_int(0);
    }
    return 0;
}

fn fibb(n, start, start2) {
    let a = start;
    let b = start2;
    while a < n {
        print_int(a);
        let c = a + b;
        a = b;
        b = c;
    }
    return 0;
}

fn factorial(n) {
    if n < 2 {
        return 1;
    }
    return factorial(n-1) * n;
}
